y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
error <- (y[i]-y_pred)^2
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
error <- (y[i]-y_pred)^2
error
data <- Boston[, c("medv","crim")]
data[1, ]
library(boot)
for (i in 1:nrow(data)){
glm.fit <- glm(crim~medv, data = Boston)
}
library(boot)
for (i in 1:2){
glm.fit <- glm(crim~medv, data = Boston)
}
library(boot)
for (i in 1:2){
glm.fit <- glm(crim~medv, data = Boston)
cv.err <- cv.glm(Boston, glm.fit)
}
library(boot)
for (i in 1:2){
glm.fit <- glm(crim~medv, data = Boston)
cv.err <- cv.glm(Boston, glm.fit)
cv.err$delta
}
library(boot)
for (i in 1:2){
glm.fit <- glm(crim~medv, data = Boston)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:nrow(Boston)){
glm.fit <- glm(crim~medv, data = Boston)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:nrow(Boston)){
glm.fit <- glm(crim~medv, data = data, family = "binomial")
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:nrow(Boston)){
glm.fit <- glm(crim~medv, data = data, family = binomial)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:nrow(Boston)){
train <- data[-i, ]
test <- data[-i, ]
glm.fit <- glm(crim~medv, data = data, family = binomial)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:nrow(Boston)){
train <- data[-i, ]
test <- data[-i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:nrow(Boston)){
train <- data[-i, ]
test <- data[-i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:2{
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[-i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
data <- Boston[, c("medv","crim")]
data[-1, ]
library(boot)
for (i in 1:2){
train <- data[-i, ]
train
test <- data[-i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
#library(boot)
for (i in 1:2){
train <- data[-i, ]
train
test <- data[-i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[-i, ]
#glm.fit <- glm(crim~medv, data = train, family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[-i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
data <- Boston[, c("medv","crim")]
data[-1, ]
data[1, ]
data <- Boston[, c("medv","crim")]
train <- data[-1, ]
test <- data[1, ]
data <- Boston[, c("medv","crim")]
train <- data[-1, ]
test <- data[1, ]
train
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, ]
glm.fit <- glm(crim~medv, data = train, family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = train, family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
data <- standardize(Boston[, c("medv","crim")])
data <- scale(Boston[, c("medv","crim")])
train <- data[-1, ]
test <- data[1, ]
train
data <- scale(Boston[, c("medv","crim")])
train <- data[-1, ]
test <- data[1, ]
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = train, family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
data <- data.frame(scale(Boston[, c("medv","crim")]))
train <- data[-1, ]
test <- data[1, ]
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = train, family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
data <- scale(Boston[, c("medv","crim")])
train <- data[-1, ]
test <- data[1, ]
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train), family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
data <- scale(Boston[, c("medv","crim")])
train <- data[-1, ]
test <- data[1, ]
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train), family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train), family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train), family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train), family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train), family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train), family = binomial)
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
data <- scale(Boston[, c("medv","crim")])
train <- data[-1, ]
test <- data[1, ]
data
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train))
#cv.err <- cv.glm(Boston, glm.fit)
#print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train))
cv.err <- cv.glm(Boston, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train))
cv.err <- cv.glm(data, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = train)
cv.err <- cv.glm(data, glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:2){
train <- data[-i, ]
test <- data[i, 1]
glm.fit <- glm(crim~medv, data = data.frame(train))
cv.err <- cv.glm(data.frame(data), glm.fit)
print(cv.err$delta)
}
library(boot)
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
}
data <- Boston[, c("medv","crim")]
train <- data[-1, ]
test <- data[1, ]
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
error <- (y[i]-y_pred)^2
library(boot)
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
}
library(boot)
error <- c(1:nrow(data))
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
error
}
library(boot)
error <- c(1:nrow(data))
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
error[i] <- y[i] - y_pred
}
library(boot)
error <- c(1:nrow(data))
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[1]))
error[i] <- y[i] - y_pred
}
error
library(boot)
error <- c(1:nrow(data))
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- y[i] - y_pred
}
error
library(boot)
error <- c(1:nrow(data))
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
error
library(boot)
error <- c(1:nrow(data))
error
for (i in 1:2){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
error
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
error
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
error
sum(error)
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
error
avg(error)
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- lm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
error
mean(error)
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- glm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
x <- data$medv
y <- data$crim
x_i <- x[-1]
y_i <- y[-1]
model <- lm(y_i~x_i)
summary(model)
y_pred <- predict(model, data.frame(x_i = x[1]))
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- glm(y_i~x_i)
y_pred <- predict(model, data.frame(x_i = x[i]))
error[i] <- (y[i]-y_pred)^2
}
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- glm(y_i~x_i)
cv.err <- cv.glm(data, glm.fit)
}
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- glm(y_i~x_i)
cv.err <- cv.glm(data, glm.fit)
cv.err$delta
}
library(boot)
error <- c(1:nrow(data))
for (i in 1:nrow(data)){
x <- data$medv
y <- data$crim
x_i <- x[-i]
y_i <- y[-i]
model <- glm(y_i~x_i)
cv.err <- cv.glm(data, model)
cv.err$delta
}
